{
  "name": "Scalpel",
  "tagline": "Enhanced auto injection framework for Android",
  "body": "### Maven version\r\n[https://bintray.com/nickandroid/maven/scalpel]\r\n\r\n![Logo](art/logo.jpg)\r\n\r\n### Latest version\r\n[ ![Download](https://api.bintray.com/packages/nickandroid/maven/scalpel/images/download.svg) ](https://bintray.com/nickandroid/maven/scalpel/_latestVersion)\r\n\r\n### General Features\r\n- Auto find views, int, String, bool, array...\r\n- OnClick listener, action, args.\r\n- Auto bind/unbind AIDL service.\r\n- Auto (un)register receiver.\r\n- Auto find System services, PowerManager, TelephonyManager, etc\r\n- Auto require permission (for SDK above M).\r\n- Auto require full screen for Activity.\r\n- Auto recycle fields for Activity.\r\n- Bean support.\r\n- Auto require root.\r\n\r\n### Usage\r\n\r\nAdd dependencies\r\n``` java\r\ndependencies {\r\n    compile 'com.nick.scalpel:scalpel:1.0.3'\r\n}\r\n```\r\n\r\n1. Configurations customize:\r\n``` java\r\n@ContextConfiguration(xmlRes = R.xml.context_scalpel_demo)\r\npublic class MyApplication extends ScalpelApplication {\r\n    @Override\r\n    protected void onConfigScalpel(Scalpel scalpel) {\r\n        super.onConfigScalpel(scalpel);\r\n        scalpel.addFieldWirer(new CustomWirer());\r\n    }\r\n}\r\n```\r\n\r\n2. Use auto activity or wire things manually\r\n``` java\r\npublic class MainActivity extends ScalpelAutoActivity {}\r\n```\r\n``` java\r\npublic class MyFragment extends ScalpelAutoFragment {}\r\n```\r\n``` java\r\n@AutoRequireRoot(mode = AutoRequireRoot.Mode.Async, callback = \"this\")\r\npublic class MyService extends ScalpelAutoService {}\r\n```\r\n\r\n``` java\r\npublic class ViewHolder {\r\n    @FindView(id = R.id.toolbar)\r\n    Toolbar toolbar;\r\n\r\n    @FindView(id = R.id.fab)\r\n    @OnTouch(action = \"showSnack\", args = {\"Hello, I am a fab!\", \"Nick\"})\r\n    FloatingActionButton fab;\r\n\r\n    @FindView(id = R.id.hello)\r\n    @OnClick(listener = \"mokeListener\")\r\n    TextView hello;\r\n\r\n    @FindInt(id = R.integer.size)\r\n    int size;\r\n\r\n    @FindColor(id = R.color.colorAccent)\r\n    int color;\r\n\r\n    @FindString(id = R.string.app_name)\r\n    String text;\r\n\r\n    @FindBool(id = R.bool.boo)\r\n    boolean bool;\r\n\r\n    @FindStringArray(id = R.array.strs)\r\n    String[] strs;\r\n\r\n    @FindIntArray(id = R.array.ints)\r\n    int[] ints;\r\n\r\n    @AutoWired\r\n    PowerManager pm;\r\n\r\n    @AutoWired\r\n    TelephonyManager tm;\r\n\r\n    @AutoWired\r\n    NotificationManager nm;\r\n\r\n    @AutoWired\r\n    AccountManager accountManager;\r\n\r\n    @AutoWired\r\n    ActivityManager am;\r\n\r\n    @AutoWired\r\n    AlarmManager alarmManager;\r\n\r\n    @BindService(action = \"com.nick.service\", pkg = \"com.nick.scalpeldemo\", callback = \"this\"\r\n            , autoUnbind = false)\r\n    IMyAidlInterface mService;\r\n\r\n    @RegisterReceiver(actions = {Intent.ACTION_SCREEN_ON, Intent.ACTION_SCREEN_OFF, \"com.nick.service.bind\"}\r\n            , autoUnRegister = false)\r\n    BroadcastReceiver receiver = new BroadcastReceiver() {\r\n        @Override\r\n        public void onReceive(Context context, Intent intent) {\r\n            Log.d(\"Scalpel.Demo\", \"onReceive, intent = \" + intent.getAction());\r\n        }\r\n    };\r\n\r\n    @FindBitmap(idRes = R.drawable.bitmap)\r\n    Bitmap bitmap;\r\n\r\n    @Custom\r\n    Object custom;\r\n\r\n    @RetrieveBean\r\n    EmptyConObject emptyConObject;\r\n\r\n    @RetrieveBean\r\n    ContextConsObject contextConsObject;\r\n\r\n    @RetrieveBean\r\n    ContextConsObject contextConsObject2;\r\n\r\n    @RetrieveBean(id = R.id.context_obj)\r\n    ContextConsObject contextConsObjectStrict;\r\n\r\n    @RetrieveBean\r\n    RecyclerManager mRecyclerManager;\r\n\r\n    @AutoWired\r\n    StorageManager sManager;\r\n```\r\n\r\n### Example\r\n``` java\r\n@AutoRequestFullScreen(viewToTriggerRestore = R.id.hello)\r\n@AutoRequirePermission(requestCode = 100, permissions = {android.Manifest.permission.READ_EXTERNAL_STORAGE,\r\n        Manifest.permission.CALL_PHONE})\r\npublic class MainActivity extends ScalpelAutoActivity implements AutoBind.Callback {\r\n    @BindService(action = \"com.nick.service\", pkg = \"com.nick.scalpeldemo\", callback = \"this\"\r\n            , autoUnbind = true)\r\n    IMyAidlInterface mService;\r\n\r\n    @RegisterReceiver(actions = {Intent.ACTION_SCREEN_ON, Intent.ACTION_SCREEN_OFF, \"com.nick.service.bind\"}\r\n            , autoUnRegister = true)\r\n    BroadcastReceiver receiver = new BroadcastReceiver() {\r\n        @Override\r\n        public void onReceive(Context context, Intent intent) {\r\n            Log.d(\"Scalpel.Demo\", \"onReceive, intent = \" + intent.getAction());\r\n        }\r\n    };\r\n\r\n    @FindBitmap(idRes = R.drawable.bitmap)\r\n    @AutoRecycle\r\n    Bitmap bitmap;\r\n}\r\n```",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}